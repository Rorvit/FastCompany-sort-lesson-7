{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\fastCompany\\\\src\\\\app\\\\components\\\\tableHeader.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableHeaderIcon from \"./tableHeaderIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableHeader = ({\n  onSort,\n  selectedSort,\n  columns\n}) => {\n  const handleSort = item => {\n    if (selectedSort.path === item) {\n      onSort({ ...selectedSort,\n        order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n      });\n    } else {\n      onSort({\n        path: item,\n        order: \"asc\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: Object.keys(columns).map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n        onClick: columns[column].path ? () => handleSort(columns[column].path) : undefined,\n        role: columns[column].path && \"button\",\n        scope: \"col\",\n        children: [columns[column].name, /*#__PURE__*/_jsxDEV(TableHeaderIcon, {\n          selectedSort: selectedSort,\n          columnPath: columns[column].path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, column, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TableHeader;\nTableHeader.propTypes = {\n  onSort: PropTypes.func.isRequired,\n  selectedSort: PropTypes.object.isRequired,\n  columns: PropTypes.object.isRequired\n};\nexport default TableHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableHeader\");","map":{"version":3,"sources":["C:/react/fastCompany/src/app/components/tableHeader.jsx"],"names":["React","PropTypes","TableHeaderIcon","TableHeader","onSort","selectedSort","columns","handleSort","item","path","order","Object","keys","map","column","undefined","role","name","propTypes","func","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,YAAV;AAAwBC,EAAAA;AAAxB,CAAD,KAAuC;AACvD,QAAMC,UAAU,GAAIC,IAAD,IAAU;AACzB,QAAIH,YAAY,CAACI,IAAb,KAAsBD,IAA1B,EAAgC;AAC5BJ,MAAAA,MAAM,CAAC,EACH,GAAGC,YADA;AAEHK,QAAAA,KAAK,EAAEL,YAAY,CAACK,KAAb,KAAuB,KAAvB,GAA+B,MAA/B,GAAwC;AAF5C,OAAD,CAAN;AAIH,KALD,MAKO;AACHN,MAAAA,MAAM,CAAC;AAAEK,QAAAA,IAAI,EAAED,IAAR;AAAcE,QAAAA,KAAK,EAAE;AAArB,OAAD,CAAN;AACH;AACJ,GATD;;AAUA,sBACI;AAAA,2BACI;AAAA,gBACKC,MAAM,CAACC,IAAP,CAAYN,OAAZ,EAAqBO,GAArB,CAA0BC,MAAD,iBACtB;AAEI,QAAA,OAAO,EACHR,OAAO,CAACQ,MAAD,CAAP,CAAgBL,IAAhB,GACM,MAAMF,UAAU,CAACD,OAAO,CAACQ,MAAD,CAAP,CAAgBL,IAAjB,CADtB,GAEMM,SALd;AAOUC,QAAAA,IAAI,EAAEV,OAAO,CAACQ,MAAD,CAAP,CAAgBL,IAAhB,IAAwB,QAPxC;AAQI,QAAA,KAAK,EAAC,KARV;AAAA,mBAUKH,OAAO,CAACQ,MAAD,CAAP,CAAgBG,IAVrB,eAWI,QAAC,eAAD;AACI,UAAA,YAAY,EAAEZ,YADlB;AAEI,UAAA,UAAU,EAAEC,OAAO,CAACQ,MAAD,CAAP,CAAgBL;AAFhC;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA,SACSK,MADT;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAnCD;;KAAMX,W;AAoCNA,WAAW,CAACe,SAAZ,GAAwB;AACpBd,EAAAA,MAAM,EAAEH,SAAS,CAACkB,IAAV,CAAeC,UADH;AAEpBf,EAAAA,YAAY,EAAEJ,SAAS,CAACoB,MAAV,CAAiBD,UAFX;AAGpBd,EAAAA,OAAO,EAAEL,SAAS,CAACoB,MAAV,CAAiBD;AAHN,CAAxB;AAKA,eAAejB,WAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableHeaderIcon from \"./tableHeaderIcon\";\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n    const handleSort = (item) => {\r\n        if (selectedSort.path === item) {\r\n            onSort({\r\n                ...selectedSort,\r\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\r\n            });\r\n        } else {\r\n            onSort({ path: item, order: \"asc\" });\r\n        }\r\n    };\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {Object.keys(columns).map((column) => (\r\n                    <th\r\n                        key={column}\r\n                        onClick={\r\n                            columns[column].path\r\n                                ? () => handleSort(columns[column].path)\r\n                                : undefined\r\n                        }\r\n                        {...{ role: columns[column].path && \"button\" }}\r\n                        scope=\"col\"\r\n                    >\r\n                        {columns[column].name}\r\n                        <TableHeaderIcon\r\n                            selectedSort={selectedSort}\r\n                            columnPath={columns[column].path}\r\n                        />\r\n                    </th>\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\nTableHeader.propTypes = {\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\nexport default TableHeader;\r\n"]},"metadata":{},"sourceType":"module"}